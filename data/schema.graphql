type Cliente {
	id: ID
	nombre: String
	apellido: String
	empresa: String
	emails: [Email]
	edad: Int
	tipo: TipoCliente
	pedidos: [Pedido]
}

type Pedido {
	producto: String
	precio: Float
}

type Email {
	email: String
}

enum TipoCliente {
	BASICO
	PREMIUM
}

input PedidoInput {
	producto: String!
	precio: Float!
}

input EmailInput {
	email: String
}

input ClienteInput {
	id: ID
	nombre: String!
	apellido: String!
	empresa: String!
	emails: [EmailInput]
	edad: Int!
	tipo: TipoCliente!
	pedidos: [PedidoInput]
}

type Query {
	getClientes(limite: Int, offset: Int): [Cliente]
	getCliente(id: ID): Cliente
	totalClientes: String
}

type Mutation {
	crearCliente(input: ClienteInput): Cliente
	actualizarCliente(input: ClienteInput): Cliente
	eliminarCliente(id: ID!): String
}
